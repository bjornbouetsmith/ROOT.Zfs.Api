# Create release workflow.
# gets sources
# Bump build version
# builds, tests and publish zip to artifacts
# commmit updated version to the repository

name: Create Release

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      publish_zip:
        type: boolean  
        description: 'Publish zip file & commit'
        default: true
        required: true
      version:
        type: string  
        description: 'Override version (x.y.z)'
        required: false


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.BUILD_SVC_PAT }}
    - name: Validate user
      if: ${{ github.triggering_actor != 'bjornbouetsmith' }}
      run: exit 1
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: |
        dotnet nuget add source --username ${{ github.triggering_actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/bjornbouetsmith/index.json"
        dotnet restore Source/ROOT.Zfs.Api.sln
    - name: Update version override
      id: update_version_override
      if: ${{ inputs.version != '' }}
      uses: vers-one/dotnet-project-version-updater@v1.0
      with:
        file: Source/Api/Api.csproj
        version: ${{ inputs.version }}
      env:
        release_version: ${{ inputs.version }}
    - name: Update version auto
      id: update_version_auto
      if: ${{ inputs.version == '' }}
      uses: vers-one/dotnet-project-version-updater@v1.0
      with:
        file: Source/Api/Api.csproj
        version: build
      env:
        release_version: ${{ steps.update_version.outputs.newVersion }}
    - name: Build
      run: dotnet build Source/ROOT.Zfs.Api.sln --no-restore --configuration Release
#    - name: Test
#      run: dotnet test Source/**/*.Tests.csproj --no-build --verbosity normal --configuration Release --filter "TestCategory!=Integration"
    - name: Publish
      run: |
        dotnet publish Source/ROOT.Zfs.Api.sln --configuration Release --framework net6.0 --output ~/ROOT.Zfs.Api.v${{ env.release_version }}
        cp Source/Api/deploy.sh ~/
    - name: ZIP published api
      run: zip -r -q ~/ROOT.Zfs.Api.v${{ steps.update_version.outputs.newVersion }}.zip ~/ROOT.Zfs.Api.v${{ env.release_version }}/
    - name: Upload zip file
      if: ${{ inputs.publish_zip }}
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ROOT.Zfs.Api.v${{ env.release_version }}
        path: |
          ~/**/*.zip
          ~/deploy.sh
        if-no-files-found: error
    - name: check in version update
      if: ${{ inputs.publish_zip }}
      id: run_git_commit
      run: |
        git config user.name "${{ github.triggering_actor }}"
        git add .
        git commit -m "Update version to ${{ env.release_version }}"
        git push -f
        git tag "v${{ env.release_version }}"
        git push --tags -f
